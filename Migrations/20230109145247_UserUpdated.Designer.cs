// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ToDoApp.Repositories;

#nullable disable

namespace ToDoApp.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230109145247_UserUpdated")]
    partial class UserUpdated
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ToDoApp.Entities.ToDoDatabaseModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("_createdTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("_description")
                        .HasColumnType("text");

                    b.Property<string>("_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("_status")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("_updatedTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ToDos");
                });

            modelBuilder.Entity("ToDoApp.Entities.UserDatabaseModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("_createdTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("_email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("_passwordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("_salt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("_updatedTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ToDoApp.Entities.ToDoDatabaseModel", b =>
                {
                    b.HasOne("ToDoApp.Entities.UserDatabaseModel", "User")
                        .WithMany("ToDos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ToDoApp.Entities.UserDatabaseModel", b =>
                {
                    b.Navigation("ToDos");
                });
#pragma warning restore 612, 618
        }
    }
}
